{"version":3,"sources":["webpack:///./src/views/vue/Key.vue?4a86","webpack:///src/views/vue/Key.vue","webpack:///./src/views/vue/Key.vue?9453","webpack:///./src/views/vue/Key.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","on","add","_v","_l","item","index","key","_s","name","age","attrs","staticRenderFns","components","data","persons","methods","unshift","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,SAAS,CAACE,GAAG,CAAC,MAAQN,EAAIO,MAAM,CAACP,EAAIQ,GAAG,QAAQR,EAAIS,GAAIT,EAAW,SAAE,SAASU,EAAKC,GAAO,OAAOP,EAAG,KAAK,CAACQ,IAAID,GAAO,CAACP,EAAG,KAAK,CAACJ,EAAIQ,GAAGR,EAAIa,GAAGH,EAAKI,MAAM,KAAKd,EAAIa,GAAGH,EAAKK,KAAK,KAAKX,EAAG,QAAQ,CAACY,MAAM,CAAC,KAAO,kBAAiB,IACvUC,EAAkB,GC6BtB,GACEC,WAAY,GAEZC,KAHF,WAII,MAAO,CACLC,QAAS,CACf,CAAQ,GAAR,MAAQ,KAAR,KAAQ,IAAR,IACA,CAAQ,GAAR,MAAQ,KAAR,KAAQ,IAAR,IACA,CAAQ,GAAR,MAAQ,KAAR,KAAQ,IAAR,OAIEC,QAAS,CACPd,IADJ,WAEMN,KAAKmB,QAAQE,QAAQ,CAA3B,+BC5C4S,I,YCOxSC,EAAY,eACd,EACAxB,EACAkB,GACA,EACA,KACA,WACA,MAIa,aAAAM,E","file":"static/js/chunk-2d0aaee9.d2546fe2.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('button',{on:{\"click\":_vm.add}},[_vm._v(\"添加\")]),_vm._l((_vm.persons),function(item,index){return _c('ul',{key:index},[_c('li',[_vm._v(_vm._s(item.name)+\"--\"+_vm._s(item.age)+\" \"),_c('input',{attrs:{\"type\":\"text\"}})])])})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <button @click=\"add\">添加</button>\r\n    <ul v-for=\"(item,index) in persons\" :key=\"index\">\r\n      <li>{{item.name}}--{{item.age}} <input type=\"text\" /></li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n  面试题：react、vue中的key有什么作用？（key的内部原理）\r\n    1.虚拟DOM中可以的作用：\r\n        key是虚拟DOM对象的标识，当数据发生变化时，Vue会根据【新数据】生成【新的虚拟DOM】,随后Vue进行【新虚拟DOM】与【旧虚拟DOM】的差异比较，比较规则如下：\r\n\r\n    2.对比规则：(文本节点，标签节点)\r\n        (1).旧虚拟DOM中找到了与新虚拟DOM相同的可以:\r\n            1.若虚拟DOM中内容没变，直接使用之前的真是DOM!\r\n            2.若虚拟DOM中内容变了，则生成新的真是DOM,随后替换掉页面中之前的真是DOM。\r\n\r\n        (2).旧虚拟DOM中未找到与新虚拟DOM相同的key:\r\n            创建新的真实DOM，随后渲染到页面。\r\n\r\n    3.用index作为key可能会引发的问题：\r\n        (1).若对赎金进行：逆序添加、逆序删除等破坏顺序操作：  会产生没有必要的真实DOM更新 ===> 界面效果没问题，但效率低。\r\n        (2).如果结构中还包含输入类的DOM:  会产生错误DOM更新 ===> 界面有问题\r\n\r\n    4.开发中如何选择key?\r\n        (1).最好使用每天数据的唯一标识作为key，比如id、手机号、身份证号、学号等唯一值。\r\n        (2).如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，使用index作为key是没有问题的\r\n\r\n<script>\r\nexport default {\r\n  components: {\r\n  },\r\n  data () {\r\n    return {\r\n      persons: [\r\n        { id: '001', name: '张三', age: 18 },\r\n        { id: '002', name: '李四', age: 19 },\r\n        { id: '003', name: '王五', age: 20 }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    add () {\r\n      this.persons.unshift({ id: '004', name: '老刘', age: 21 })\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n<style scoped>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Key.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Key.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Key.vue?vue&type=template&id=814d4c2e&scoped=true&\"\nimport script from \"./Key.vue?vue&type=script&lang=js&\"\nexport * from \"./Key.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"814d4c2e\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}